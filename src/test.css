/*
    16px = 1em
    1px = 1/16 em
    0.0625em = 1px
*/


/*
    reference:
    calc( 2.25em + (11.25 - 2.25) * ( (100vw - 20em) / ( 100 - 20) ))

*/
/*
    Fluid Typgraphy formula
    Source: https://css-tricks.com/snippets/css/fluid-typography/
    font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));

    font-size: calc(1em + (10em - 1em) * ((100vw - 28.375em) / (1600px - 454px)));
    font-size: calc(1em + 9 * ((100vw - 28.375em) / 1146));
    Notes:
        all units must be the same size
        * divisor must be same units as font size, but without the units expressed
*/

html, body {
    height: 100%;
}

body {
    --text-color-1-light: #FFFFFF;

    margin: 0;

    color: var(--text-color-1-light);
    font-family: "Century Gothic", Futura, sans-serif;
    font-size: calc(0.75em + 0.75 * ((100vw - 5.6875em) / 94.3125));

    background: linear-gradient(-60deg, rgba(82, 00, 255, 40%) 0%, rgba(255, 255, 255, 0) 65%), linear-gradient(30deg, rgba(0, 255, 255, 30%) 5%, rgba(255, 0, 0, 0) 90%), linear-gradient(100deg, #005809 5%, #C6FF9A 95%);
    background-attachment: fixed;
}

/*
    This is the inset box shadow that is not scrollable, to match the non-scrolling background
    Shadow size scales with viewport width
*/

body::before {
    content: "";

    width: 100%;
    height: 100%;
    display: inline-block;
    position: fixed;

    box-shadow: inset 0 0 calc(50 * ((100vw - 91px) / (1509))) rgba(0, 0, 0, 0.5);
    pointer-events: none;
}

/*
    calc([minimum size] + ([maximum size] - [minimum size])
    * ((100vw - [minimum viewport width])
    / ([maximum viewport width] - [minimum viewport width])));
calc( 2.25em + (11.25 - 2.25) * ( (100vw - 20em) / ( 100 - 20) ))
*/

@media (min-width: 100em) {
    body {
        font-size: 1.5em;
    }
}

h1, h2, h3 {
    font-weight: normal;
}

h1 {
    display: inline-block;

    box-sizing: border-box;
    width: 100%;

    border-bottom: 1px white solid;
    border: 1px solid red;

    font-size: calc(1rem + 4 * ((100vw - 5.6875rem) / 94.3125));
    text-align: center;
    text-decoration: underline;
}

@media (min-width: 100em) {
    h1 {
        font-size: 5rem;
    }
}

.margin-center {
    left: 50%;
    transform: translate(-50%, 0%);
    position: relative;
}

header {
    border: 1px solid orange;
    box-sizing: border-box;
}

main {

}

footer {
    border: 1px solid #FF00FF;
    box-sizing: border-box;
}

.l-main-panel {
    left: calc(50%);
    transform: translate(calc(-50%), 0%);
    position: relative;
    display: inline-block;
    
    box-sizing: border-box;
    max-width: calc(485px + 715 * ((100vw - 500px)/1100));

    padding-top: calc(0.25rem + 0.75 * ((100vw - 31.25rem)/43.75));
    padding-right: calc(0.25rem + 2.75 * ((100vw - 31.25rem)/43.75));
    padding-bottom: calc(0.25rem + 0.75 * ((100vw - 31.25rem)/43.75));
    padding-left: calc(0.25rem + 2.75 * ((100vw - 31.25rem)/43.75));

    margin: 1rem 0 1rem 0;

    background-color: rgba(223, 223, 223, 0.15);
    border: 1px solid rgba(255, 255, 255, 0.25);
    border-radius: 1rem;
    box-shadow: 0px 0px 10px rgba(0,0,0,0.5);

    text-align: center;
    word-wrap: break-word;
}

@media (max-width: 500px) {
    .l-main-panel {
        max-width: 97vw;

        padding: 0.25rem;
    }

}

@media (min-width: 1200px) {
    .l-main-panel {
        padding: 1rem 3rem 1rem 3rem;
    }
}

@media (min-width: 1600px) {
    .l-main-panel {
        max-width: 1200px;
    }
}

.l-main-panel > div, .l-main-panel > button {
    margin-bottom: .666em;
}

.l-main-panel > .l-short-bottom {
    margin-bottom: 0.5em;
}

.l-top-gap {
    margin-top: 1.34rem;
}

.l-input-row {
    left: 50%;
    transform: translate(-50%, 0%);
    position: relative;
    display: flex;

    justify-content: center;

    width: calc(450px + 250 * ((100vw - 500px)/1100));
    max-width: 100%;
}

@media (max-width: 288px) {
    .l-input-row {
        flex-direction: column;
        align-items: end;
    }
}

@media (min-width: 1600px) {
    .l-input-row {
        width: 700px;
    }
}

.text-input-style {
    text-align: left;
}

input[type='text'], .text-input-style {
    width: 100%;
    max-width: 100%;

    padding: 12px 2.25em 12px 12px;
    
    font-size: 1em;

    border-width: 0px;
    border-radius: 0.35rem;

    font-family: "Century Gothic", Futura, sans-serif;
}

@media (max-width: 288px) {
    input[type='text'], .text-input-style {
        box-sizing: border-box;
    }
}

.l-main-input, input[type='text'].l-main-input {
    border: 2px solid rgba(0, 96, 0, 1);
}



.l-input-button {
    right: 0%;
    bottom: 0%;
    position: absolute;
    vertical-align: middle;
    color: black;
    font-size: 1.5em;
    font-weight: bold;
    text-align: center;
    cursor: pointer;
    border-radius: 0.35rem;
    width: 1.5em;
    height: calc(42.4px + 14.6 * ((100vw - 91px)/(1509)));
    /*
        note on this line-height calculation;
            the 1.55 was experimentally determined, it should be 0.75

            im not sure why this works with -1.55 instead of -0.75 like it is supposed to be
            my guess is that since the font-size is 2em, during the division portion,
                the 2x modifier was removed from that expression, meaning we need to reintroduce it
                
                also it is possible that the initial value should be 1.775 instead, but it is close enough
    */
    line-height: calc(2.7rem + 0.8 * ((100vw - 5.6875rem)/(94.3125)));
    /**
        1em at largest sizes, then 1.75em at smallest size
        1.75 -.75
    line-height: calc(1.75em - 0.75 * ((100vw - 2.8475em)/(47.1525)));

    */
}


@media (max-width: 91px) {
    .l-input-button {
        height: 42.4px;
        line-height: 2.7rem;
    }
}

@media (min-width: 1600px) {
    .l-input-button {
        height: 57px;
        line-height: 3.5rem;
    }
}


.add:hover, .add:focus {
    color: rgb(0, 200, 100);
}


.l-item-field {
    padding: 12px !important;
}

.l-price-input {
    width: calc(3.5em + 2px) !important;
    box-sizing: content-box !important;
}

@media (max-width: 98px) {
    .l-price-input {
        width: 100% !important;
        box-sizing: border-box !important;
    }
}

.l-name {
    color: var(--text-color-1-light);
    /*   background-color: rgba(32,32,32,0.40) */
    /*   background-color: transparent; */
}

.l-name {
    /*background-color: rgba(0, 192, 0, 0.4);*/
    background-color: rgba(53, 181, 77, 1);
    border: 2px solid rgba(255, 255, 255, 1) !important;
}

.removeable:hover, .removeable:focus {
    color: red;
}

.button-container {
    padding: 0 calc(16.66% + 2px) 0 calc(16.66% + 2px);
    display: flex;
    justify-content: center;
}

.button {
    padding: 12px;
    border-width: 0px;
    border-radius: 0.35rem;
    width: 100%;
    background-color: rgba(64,64,64, 1);
    color: var(--text-light-1);
    position: relative;
    z-index: 0;
    font-size: 1em;
}

/*
    Darken effect on button that doesn't affect text color;
    Base button needs z-index: 0, among other things
*/

.button:hover::after, .button:focus::after {
    z-index: -1;
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0%;
    top: 0%;
    border-radius: 0.35rem;
    background-color: black;
    display: inline;
    opacity: 0.1;
}


.button:hover:active::after {
    opacity: 0.2;
}


.space-right {
    margin-right: 0.5rem;
}


.space-left {
    margin-left: 0.5rem;
}


@media (max-width: 288px) {
    .space-right {
        margin-right: auto;
        margin-bottom: 0.5em;
    }
    .space-left {
        margin-left: auto;
    }
}

.l-item {
    color: var(--text-light-1);
    /*background-color: rgba(0, 96, 0, 0.4);*/
    background-color: rgba(45, 141, 76, 1);
    border: 2px solid rgba(255, 255, 255, 1) !important;
}


.attached-name {
    padding-left: 2em;
    justify-content: start;
    flex-wrap: wrap;
    margin-bottom: 0;
}

@media(max-width: 288px) {
    .attached-name {
        flex-direction: row;
        align-items: start;
        padding-left: 0;
    }
}

.l-attached-name:not(:last-child) {
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
}

@media(max-width: 288px) {
    .l-attached-name:not(:last-child) {
        margin-right: 0.25rem;
        margin-bottom: 0.25rem;
    }
}

.overlay {
    position: fixed;
    width: 100%;
    height: 100%;
    background-color: white;
    top: 0;
    opacity: 0.15;
}

.split-modal {
    position: fixed;
    top: 0%;
    left: 50%;
    transform: translate(-50%, 0);
    margin: 3rem 0 0 0;
    max-height: calc(100vh - 3rem);
    overflow-y: auto;
    backdrop-filter: blur(5px);
    z-index: 0;
}

.selected, .selected-cyan {
    border-width: 2px;
    border-style: solid;
}

.selected {
    border-color: #00FF00 !important;
}

.selected-cyan {
    border-color: #00CCCC !important;
}

.clickable-light-overlay {
    z-index: 0;
    position: relative;
}

.clickable-light-overlay:hover::after, .clickable-light-overlay:active::after {
    z-index: -1;
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    left: 0%;
    top: 0%;
    border-radius: 0.35rem;
    background-color: black;
    display: inline;
    opacity: 0.1;
}

.clickable-light-overlay:hover:active::after {
    opacity: 0.2;
}


iframe {
    pointer-events: none;
}