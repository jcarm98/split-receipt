/*
    16px = 1em
    1px = 1/16 em
    0.0625em = 1px
*/


/*
    reference:
    calc( 2.25em + (11.25 - 2.25) * ( (100vw - 20em) / ( 100 - 20) ))

*/
/*
    Fluid Typgraphy formula
    Source: https://css-tricks.com/snippets/css/fluid-typography/
    font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));

    font-size: calc(1em + (10em - 1em) * ((100vw - 28.375em) / (1600px - 454px)));
    font-size: calc(1em + 9 * ((100vw - 28.375em) / 1146));
    Notes:
        all units must be the same size
        * divisor must be same units as font size, but without the units expressed
*/

html, body {
    height: 100%;
}

body {
    --text-color-1-light: #FFFFFF;

    margin: 0;

    color: var(--text-color-1-light);
    font-family: "Century Gothic", Futura, sans-serif;
    font-size: calc(0.75em + 0.75 * ((100vw - 5.6875em) / 94.3125));

    background: linear-gradient(-60deg, rgba(82, 00, 255, 40%) 0%, rgba(255, 255, 255, 0) 65%), linear-gradient(30deg, rgba(0, 255, 255, 30%) 5%, rgba(255, 0, 0, 0) 90%), linear-gradient(100deg, #005809 5%, #C6FF9A 95%);
    background-attachment: fixed;
}

/*
    This is the inset box shadow that is not scrollable, to match the non-scrolling background
    Shadow size scales with viewport width
*/

body::before {
    content: "";

    width: 100%;
    height: 100%;
    display: inline-block;
    position: fixed;

    box-shadow: inset 0 0 calc(50 * ((100vw - 91px) / (1509))) rgba(0, 0, 0, 0.5);
    pointer-events: none;
}

/*
    calc([minimum size] + ([maximum size] - [minimum size])
    * ((100vw - [minimum viewport width])
    / ([maximum viewport width] - [minimum viewport width])));
calc( 2.25em + (11.25 - 2.25) * ( (100vw - 20em) / ( 100 - 20) ))
*/

@media (min-width: 100em) {
    body {
        font-size: 1.5em;
    }
}

h1, h2, h3 {
    font-weight: normal;
}

h1 {
    display: inline-block;

    box-sizing: border-box;
    width: 100%;

    font-size: calc(1rem + 4 * ((100vw - 5.6875rem) / 94.3125));
    text-align: center;
    text-decoration: underline;
}

@media (min-width: 100em) {
    h1 {
        font-size: 5rem;
    }
}

.margin-center {
    left: 50%;
    transform: translate(-50%, 0%);
    position: relative;
}

header {

}

#test {
    height: 100%;
}

main {

}

footer {
    bottom: 0;
    position: relative;
    left: 50%;
    transform: translate(-50%, 0%);
    display: flex;
    justify-content: flex-end;
    flex-direction: column;
    flex-grow: 1;
    width: calc(485px + 715 * ((100vw - 500px)/1100));
}

@media (max-width: 500px) {
    footer {
        width: 96vw;
    }
}

@media (min-width: 1600px) {
    footer {
        width: 1200px;
        margin-bottom: 1rem;
    }
}

.l-footer-wrapper {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

/**
    right is 27px at 600
    640px = 613 + 27 at max size
    683 at 2560
*/

#toast-container {
    top: 0%;
    right: calc(27px + 176 * ((100vw - 600px)/1000));
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}


@media(max-width: 300px) {
    #toast-container {
        right: 4px;
    }
}

@media(min-width: 300px) and (max-width: 600px) {
    #toast-container {
        right: calc(4px + 23 * ((100vw - 300px)/300));
    }
}

@media(min-width: 1600px) {
    #toast-container {
        right: calc(203px + 480 * ((100vw - 1600px)/960));
    }
}

@keyframes fade-out {
    from { opacity: 1; }
    to { opacity: 0; }
}

a {
    color: #1df008;
}

.glass-panel, .l-footer-panel {
    display: inline-block;
    
    box-sizing: border-box;
    max-width: 20vw;
    padding: 0.5rem;

    background-color: rgba(100, 223, 100, 0.15);
    border: 1px solid rgba(100, 255, 100, 0.25);
    border-radius: 1rem;
    box-shadow: 0px 0px 10px rgba(0,0,0,0.5);

    text-align: center;
    word-wrap: break-word;
    backdrop-filter: blur(2px);
    z-index: 1;
}

.l-footer-panel {
    padding-left: 1rem;
    padding-right: 1rem;
}

.glass-panel {
    opacity: 1;
    animation-timing-function: linear;
    animation-delay: 5s;
    animation-duration: 5s;
    animation-name: fade-out;
}

@media(max-width: 300px) {
    .glass-panel {
        max-width: 50vw;
    }
}

@media(min-width: 300px) and (max-width: 600px) {
    .glass-panel {
        max-width: 33vw;
    }
}

@media(min-width: 600px) and (max-width: 950px) {
    .glass-panel {
        max-width: 25vw;
    }
}

.l-main-panel {
    left: calc(50%);
    transform: translate(calc(-50%), 0%);
    position: relative;
    display: inline-block;
    box-sizing: border-box;
    width: calc(485px + 715 * ((100vw - 500px)/1100));
    padding-top: calc(0.25rem + 0.75 * ((100vw - 31.25rem)/43.75));
    padding-right: calc(0.25rem + 2.75 * ((100vw - 31.25rem)/43.75));
    padding-bottom: calc(0.25rem + 0.75 * ((100vw - 31.25rem)/43.75));
    padding-left: calc(0.25rem + 2.75 * ((100vw - 31.25rem)/43.75));
    margin: 1rem 0 1rem 0;
    background-color: rgba(223, 223, 223, 0.15);
    border: 1px solid rgba(255, 255, 255, 0.25);
    border-radius: 1rem;
    box-shadow: 0px 0px 10px rgba(0,0,0,0.5);
    text-align: center;
    word-wrap: break-word;
    backdrop-filter: blur(2px);
    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0,.79,0,1);
}

@media (max-width: 500px) {
    .l-main-panel {
        width: 96vw;

        padding: 0.25rem;
    }

}

@media (min-width: 1200px) {
    .l-main-panel {
        padding: 1rem 3rem 1rem 3rem;
    }
}

@media (min-width: 1600px) {
    .l-main-panel {
        width: 1200px;
    }
}

.l-main-panel > div, .l-main-panel > button, .rows > div {
    margin-bottom: .666em;
}

.l-main-panel > .l-short-bottom {
    margin-bottom: 0.5em;
}

.l-top-gap {
    margin-top: 1.34rem;
}

.l-row {
    left: 50%;
    transform: translate(-50%, 0%);
    position: relative;
    display: flex;

    justify-content: center;

    width: calc(450px + 250 * ((100vw - 500px)/1100));
    max-width: 100%;
}

@media (max-width: 288px) {
    .l-row {
        flex-direction: column;
        align-items: end;
    }
}

@media (min-width: 1600px) {
    .l-row {
        width: 700px;
    }
}

.text-input-style {
    text-align: left;
}

input[type='text'], .text-input-style {
    width: 100%;
    max-width: 100%;

    padding-top: 12px;
    padding-right: 2.25em;
    padding-bottom: 12px;
    padding-left: calc(2px + 10 * ((100vw - 91px)/(1509)));
    
    font-size: 1em;
    font-family: "Century Gothic", Futura, sans-serif;

    border-width: 0px;
    border-radius: 0.35rem;
}

@media(max-width: 91px) {
    input[type='text'], .text-input-style {
        padding-left: 2px;
    }
}

@media (max-width: 288px) {
    input[type='text'], .text-input-style {
        box-sizing: border-box;
    }
}

@media(min-width: 1600px) {
    input[type='text'], .text-input-style {
        padding-left: 12px;
    }
}

.l-main-input, input[type='text'].l-main-input {
    border: 2px solid rgba(0, 96, 0, 1);
}

.l-input-button {
    position: absolute;
    right: 0%;
    bottom: 0%;

    vertical-align: middle;
    text-align: center;

    width: 1.5em;
    height: calc(42.4px + 14.6 * ((100vw - 91px)/(1509)));
    /*
        note on this line-height calculation;
            the 1.55 was experimentally determined, it should be 0.75

            im not sure why this works with -1.55 instead of -0.75 like it is supposed to be
            my guess is that since the font-size is 2em, during the division portion,
                the 2x modifier was removed from that expression, meaning we need to reintroduce it
                
                also it is possible that the initial value should be 1.775 instead, but it is close enough
    */
    line-height: calc(2.7rem + 0.8 * ((100vw - 5.6875rem)/(94.3125)));
    /**
        1em at largest sizes, then 1.75em at smallest size
        1.75 -.75
    line-height: calc(1.75em - 0.75 * ((100vw - 2.8475em)/(47.1525)));

    */

    font-size: 1.5em;
    font-weight: bold;
    color: black;

    border-radius: 0.35rem;

    cursor: pointer;
}

@media (max-width: 91px) {
    .l-input-button {
        height: 42.4px;
        line-height: 2.7rem;
    }
}

@media (min-width: 1600px) {
    .l-input-button {
        height: 57px;
        line-height: 3.5rem;
    }
}

.modal-exit {
    top: 0%;
    bottom: auto;
}

.add:hover, .add:focus {
    color: rgb(0, 200, 100);
}

.l-padding-no-button, input[type='text'].l-padding-no-button {
    padding-top: 12px;
    padding-right: calc(2px + 10 * ((100vw - 91px)/(1509)));
    padding-bottom: 12px;
    padding-left: calc(2px + 10 * ((100vw - 91px)/(1509)));
}

@media(max-width: 91px) {
    .l-padding-no-button, input[type='text'].l-padding-no-button {
        padding-right: 2px;
        padding-left: 2px;
    }
}

@media(min-width: 1600px){
    .l-padding-no-button, input[type='text'].l-padding-no-button {
        padding-right: 12px;
        padding-left: 12px;
    }
}


.l-price-input {
    width: calc(3.5em + 2px) !important;
    box-sizing: content-box !important;
}

@media (max-width: 98px) {
    .l-price-input {
        width: 100% !important;
        box-sizing: border-box !important;
    }
}

.l-name, .l-item {
    color: var(--text-color-1-light);
    border-width: 2px !important;
    border-style: solid;
    border-color: rgba(255,255,255,1);
}

.l-name {
    /*background-color: rgba(0, 192, 0, 0.4);*/
    background-color: rgba(53, 181, 77, 1);
}

.l-item {
    /*background-color: rgba(0, 96, 0, 0.4);*/
    background-color: rgba(45, 141, 76, 1);
}

.removeable:hover, .removeable:focus {
    color: red;
}

.button {
    position: relative;
    z-index: 0;
    width: 100%;
    padding: 12px;

    font-size: 1em;
    color: var(--text-color-1-light);

    background-color: rgba(64,64,64, 1);
    border-width: 2px;
    border-radius: 0.35rem;
    border-color: white;
    border-style: solid;
    box-sizing: border-box;
    cursor: pointer;
}

/*
    Darken effect on button that doesn't affect text color;
    Base button needs z-index: 0, among other things
*/

.clickable-overlay {
    z-index: 0;
    position: relative;
    cursor: pointer;
}

.clickable-overlay.l-input-button {
    position: absolute;
}

.clickable-overlay:hover::after, .clickable-overlay:active::after, .button:hover::after, .button:focus::after {
    position: absolute;
    left: 0%;
    top: 0%;

    z-index: -1;
    display: inline;

    width: 100%;
    height: 100%;

    content: "";

    border-radius: 0.35rem;
    
    opacity: 0.1;
    background-color: black;
}

.clickable-overlay:hover:active::after, .button:hover:active::after {
    opacity: 0.2;
}

.l-space-right {
    margin-right: 0.5rem;
}

.l-space-left {
    margin-left: 0.5rem;
}

@media (max-width: 288px) {
    .l-space-right {
        margin-right: auto;
        margin-bottom: 0.5em;
    }
    .l-space-left {
        margin-left: auto;
    }
}

.l-attached-container {
    box-sizing: border-box;
    justify-content: start;
    flex-wrap: wrap;
 
    padding-left: 2em;
    
    margin-bottom: 0;
}

@media(max-width: 288px) {
    .l-attached-container {
        flex-direction: row;
        align-items: start;

        padding-left: 0;
    }
}

.l-attached-item {
    width: auto;
}

.l-attached-item {
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
}

@media(max-width: 288px) {
    .l-attached-item {
        margin-right: 0.25rem;
        margin-bottom: 0.25rem;
    }
}

/* backdrop-filter: blur only works with a background-color that has alpha channel*/
.overlay {
    content: 'and here';
    position: fixed;
    top: 0%;
    
    width: 100%;
    height: 100%;
    
    background-color: rgba(0,0,0,0.3);
    backdrop-filter: blur(2px);
    display: inline-block;
    z-index: 9;
}

.l-split-modal {
    position: fixed;
    top: 0%;
    left: 50%;

    transform: translate(-50%, 0);
    z-index: 0;
    
    max-width: calc(485px + 615 * ((100vw - 500px)/1100));
    max-height: calc(43.75rem + 21.25 * ((100vh - 43.75rem)/31.25));

    margin-top: calc(0rem + 10 * ((100vh - 43.75rem)/31.25));
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;

    overflow-y: auto;

    backdrop-filter: blur(5px);

    border-color: rgb(0, 255, 166, 0.75);
    border-width: 2px;
    z-index: 10;
}

@media (max-width: 500px) {
    .l-split-modal {
        max-width: 96vw;
    }
}

@media (min-width: 1600px) {
    .l-split-modal {
        max-width: 1100px;
    }
}

@media (max-height: 700px) {
    .l-split-modal {
        margin-top: 0;
        max-height: 100vh;
    }
}

@media (min-height: 1200px) {
    .l-split-modal {
        margin-top: 10rem;
        max-height: calc(100vh - 10rem);
    }
}

.l-confirm-modal {
    top: 50%;
    transform: translate(-50%, -50%);

    max-height: 100vh;

    margin-top: 0;

    color: black;
}

.is-selected {
    border-width: 2px;
    border-style: solid;
    border-color: #00FF00 !important;
}

input[type='checkbox'] {
    margin-right: calc(2px + 10 * ((100vw - 91px)/(1509)));
    top: -50%;
    position: relative;
    transform: translate(0, 80%);
    cursor: pointer;
}

@media(max-width: 91px) {
    input[type='checkbox'] {
        margin-right: 2px;
    }
}

@media(max-width: 288px) {
    input[type='checkbox'] {
        transform: none;
    }
}

@media(min-width: 288px) and (max-width: 505px) {
    input[type='checkbox'] {
        transform: translate(0, 80%) scale(1.25);
    }
}

@media(min-width: 506px) and (max-width: 954px) {
    input[type='checkbox'] {
        transform: translate(0, 80%) scale(1.5);
    }
}

@media(min-width: 955px) {
    input[type='checkbox'] {
        transform: translate(0, 80%) scale(2);
    }
}

@media(min-width: 1600px) {
    input[type='checkbox'] {
        margin-right: 12px;
    }
}

.l-result-row {
    display: flex;
    justify-content: space-between;
}

iframe {
    pointer-events: none;
}

.l-result-container {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

@media(max-width: 450px) {
    .l-result-container {
        flex-direction: column;
    }
}


input[type='text'].l-result-input {
    width: 4.5rem;
}

.carousel {
    perspective: 500px;
    transform-style: preserve-3d;
    /*overflow-x: hidden;*/
    display: inline-flex;
    align-items: center;
    transform: translate(-50%, 0);
    left: 50%;
    position: relative;
}


#collect-names, #item-mapping, #results, #collect-items {
    transform:
    translateX(calc(var(--x-offset) * -1rem))
    rotateY(calc(var(--offset) * 50deg))
    scaleY(calc(1 + var(--abs-offset) * -0.4))
    translateZ(calc(var(--abs-offset) * -30rem))
    translateX(calc(var(--direction) * -5rem))
    scaleX(calc(1 - var(--x-scale)));
    filter: blur(calc(var(--abs-offset) * 1.5rem));
    position: absolute;
    pointer-events: none;
}

