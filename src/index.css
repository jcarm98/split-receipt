/*
    16px = 1em
    1px = 1/16 em
    0.0625em = 1px
*/
/*
    reference:
    calc( 2.25em + (11.25 - 2.25) * ( (100vw - 20em) / ( 100 - 20) ))

*/
/*
    Fluid Typgraphy formula
    Source: https://css-tricks.com/snippets/css/fluid-typography/
    font-size: calc([minimum size] + ([maximum size] - [minimum size]) * ((100vw - [minimum viewport width]) / ([maximum viewport width] - [minimum viewport width])));

    font-size: calc(1em + (10em - 1em) * ((100vw - 28.375em) / (1600px - 454px)));
    font-size: calc(1em + 9 * ((100vw - 28.375em) / 1146));
    Notes:
        all units must be the same size
        * divisor must be same units as font size, but without the units expressed
*/

@import "./utils/toast.css";

/* Base Rules */

noscript{
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}

/* Allow use of full height */
html, body {
    height: 100%;
    min-height: 100%;
}

/*
    font-size:
        0.75em at 5.6875em (91px) view width
        1.5em at and over 100em (1600px) view width
        scales with width between 91px and 1600px and below 91px
*/
body {
    --text-color-1-light: #FFFFFF;
    margin: 0;
    color: var(--text-color-1-light);
    font-family: "Century Gothic", Futura, sans-serif;
    font-size: calc(0.75em + 0.75 * ((100vw - 5.6875em) / 94.3125));
    background: linear-gradient(-60deg, rgba(82, 00, 255, 40%) 0%, rgba(255, 255, 255, 0) 65%), linear-gradient(30deg, rgba(0, 255, 255, 30%) 5%, rgba(255, 0, 0, 0) 90%), linear-gradient(100deg, #005809 5%, #C6FF9A 95%);
    background-attachment: fixed;
}

    /*
    This is the inset box shadow that is not scrollable, to match the non-scrolling background
    Shadow size scales with viewport width
*/
    /*
        box-shadow:
            0 at and under 91px
            50px at and over 1600px
            scales with width between 91px and 1600px
    */
    body::before {
        content: "";
        width: 100%;
        height: 100%;
        display: inline-block;
        position: fixed;
        box-shadow: inset 0 0 calc(50 * ((100vw - 91px) / (1509))) rgba(0, 0, 0, 0.5);
        pointer-events: none;
    }

/*
    calc([minimum size] + ([maximum size] - [minimum size])
    * ((100vw - [minimum viewport width])
    / ([maximum viewport width] - [minimum viewport width])));
calc( 2.25em + (11.25 - 2.25) * ( (100vw - 20em) / ( 100 - 20) ))
*/

@media (min-width: 100em) {
    body {
        font-size: 1.5em;
    }
}

h1, h2, h3 {
    font-weight: normal;
}

/*
    font-size:
        1rem at 5.6875rem (91px) view width
        5rem at and over 100em (1600px) view width
        scales with width between 91px and 1600px and below 91px
*/
h1 {
    display: inline-block;

    box-sizing: border-box;
    
    font-size: calc(1rem + 4 * ((100vw - 5.6875rem) / 94.3125));
    text-align: center;
    text-decoration: underline;
}

@media (min-width: 100em) {
    h1 {
        font-size: 5rem;
    }
}

/*
    padding-right/padding-left:
        2rem at and below 6.125rem (98px) view width
        0 at and above 11.875 (190px) view width
        scales with width between 98px and 190px
*/
header > h1 {
    transition: 0.3s;

    border-radius: 1rem;
    padding-right: calc(2 * ((100vw - 6.125rem)/5.75));
    padding-left: calc(2 * ((100vw - 6.125rem)/5.75));

    cursor: pointer;
}

header > h1:hover {
    text-shadow: 0px 0px 10px white;
}

@media(min-width: 190px) {
    header > h1 {
        padding-right: 2rem;
        padding-left: 2rem;
    }
}

@media(max-width: 98px) {
    header > h1 {
        padding-right: 0;
        padding-left: 0;
    }
}

/* Centers h1 */
.transform-center {
    position: relative;
    left: 50%;

    transform: translate(-50%, 0%);
}

/* Green links */
a {
    color: #1df008;
}


/* Allow use of full height */
#root {
    height: 100%;
}

header {
    position: absolute;
    left: 50%;

    transform: translate(-50%, 0);

    width: 100%;
}

main {
    flex-grow: 1;

    display: flex;
}

/* Text Input */
/* Lets divs look like text input */
.text-input-style {
    text-align: left;
    word-wrap: initial;
    overflow: hidden;
}

/*
    Text input base style
    padding-left:
        2px at and below 91px view width
        12px at and above 1600px view width
        scales with width between 91px and 1600px
*/
input[type='text'], .text-input-style {
    border-radius: 0.35rem;
    border-width: 0px;
    width: 100%;
    max-width: 100%;
    padding-top: 12px;
    padding-right: 2.25em;
    padding-bottom: 12px;
    padding-left: calc(2px + 10 * ((100vw - 91px)/(1509)));

    font-size: 1em;
    font-family: "Century Gothic", Futura, sans-serif;
}

@media(max-width: 91px) {
    input[type='text'], .text-input-style {
        padding-left: 2px;
    }
}

@media (max-width: 288px) {
    input[type='text'], .text-input-style {
        box-sizing: border-box;
    }
}

@media(min-width: 1600px) {
    input[type='text'], .text-input-style {
        padding-left: 12px;
    }
}

/* Main text input for a panel has green border */
.l-main-input, input[type='text'].l-main-input {
    border: 2px solid rgba(0, 96, 0, 1);
}

/* Checkbox input */
/*
    Checkbox base style
    margin-right:
        2px at and under 91px width
        12px at and over 1600px width
        scales with width between 91px and 1600px

    transform:
        
*/

input[type='checkbox'] {
    position: relative;

    transform: none;

    margin-right: calc(2px + 10 * ((100vw - 91px)/(1509)));

    cursor: pointer;
}

@media(max-width: 91px) {
    input[type='checkbox'] {
        margin-right: 2px;
    }
}

@media(max-width: 288px) {
    input[type='checkbox'] {
        transform: none;
    }
}

@media(min-width: 288px) and (max-width: 505px) {
    input[type='checkbox'] {
        transform: scale(1.25);
    }
}

@media(min-width: 506px) and (max-width: 954px) {
    input[type='checkbox'] {
        transform: scale(1.5);
    }
}

@media(min-width: 955px) {
    input[type='checkbox'] {
        transform: scale(2);
    }
}

@media(min-width: 1600px) {
    input[type='checkbox'] {
        margin-right: 12px;
    }
}

/* Global button style */
.button {
    z-index: 0;
    position: relative;

    border-color: white;
    border-radius: 0.35rem;
    border-style: solid;
    border-width: 2px;
    box-sizing: border-box;
    width: 100%;
    padding: 12px;

    background-color: rgba(64,64,64, 1);
    cursor: pointer;

    font-size: 1em;
    color: var(--text-color-1-light);
}

/*
    Darken effect on button that doesn't affect text color;
    Base button needs z-index: 0, among other things
*/

.clickable-overlay {
    z-index: 0;
    position: relative;

    cursor: pointer;
}

    .clickable-overlay.l-input-button {
        position: absolute;
    }

    .clickable-overlay:hover::after, .clickable-overlay:active::after, .button:hover::after, .button:focus::after {
        content: "";

        position: absolute;
        z-index: -1;
        top: 0%;
        left: 0%;

        display: inline;
        opacity: 0.1;

        width: 100%;
        height: 100%;

        border-radius: 0.35rem;

        background-color: black;
    }

    .clickable-overlay:hover:active::after, .button:hover:active::after {
        opacity: 0.2;
    }

.l-space-right {
    margin-right: 0.5rem;
}

.l-space-left {
    margin-left: 0.5rem;
}

@media (max-width: 288px) {
    .l-space-right {
        margin-right: auto;
        margin-bottom: 0.5em;
    }

    .l-space-left {
        margin-left: auto;
    }
}








/* Layout Rules */

/* Footer */
/*
    Flex column for header main footer
*/
.l-align-footer {
    position: relative;
    flex-direction: column;

    display: flex;

    min-height: 100%;
}

/*
    Outermost footer container
    width:
        96vw under 500px view width
        485px at 500px view width
        1200px at and above 1600px view width
        scales with view width between 500px and 1600px
*/
footer {
    position: absolute;
    bottom: 0;
    left: 50%;
    flex-direction: column;
    flex-grow: 1;
    justify-content: flex-end;
    
    display: flex;
    transform: translate(-50%, 0%);

    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0,.79,0,1);

    width: calc(485px + 715 * ((100vw - 500px)/1100));
    padding-bottom: 1rem;
}

@media (max-width: 500px) {
    footer {
        width: 96vw;
    }
}

@media (min-width: 1600px) {
    footer {
        width: 1200px;
    }
}

.l-footer-wrapper {
    flex-direction: row;
    justify-content: center;

    display: flex;
}

@media(max-width: 288px) {
    .l-footer-wrapper {
        flex-direction: column;
    }
}

/* similar to glass panel in toast.css */
.l-footer-panel {
    z-index: 1;
    padding: 0.5rem;
    
    display: inline-block;

    transition: 0.3s;

    box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);
    border-top: 1px solid rgba(100, 255, 100, 0.5);
    border-left: 1px solid rgba(100, 255, 100, 0.5);
    border-radius: 1rem;
    box-sizing: border-box;
    max-width: 20vw;

    background-color: rgba(100, 223, 100, 0.15);

    text-align: center;
    word-wrap: break-word;

    backdrop-filter: blur(2px);
}

.l-footer-panel {
    margin-right: 0.5rem;
    margin-left: 0.5rem;
    max-width: 100vw;
    padding-right: 1rem;
    padding-left: 1rem;
}

@media(max-width: 288px) {
    .l-footer-panel {
        margin-right: 0;
        margin-left: 0;
        flex-direction: column;
    }
}

.l-footer-panel:hover {
    box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.75);
}

.l-footer-panel::before {
    content: '';

    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    display: inline-block;
    
    border-radius: 1rem;
    width: 100%;
    height: 100%;
    
    background-image: linear-gradient(45deg, transparent 0%, rgba(255,255,255, .07) 66%, transparent 66%);
    
    pointer-events: none;

}

/*
    Base panel style
    width:
        96vw below 500px
        485px at 500px view width
        1200px at and above 1600px view width
        scales with view width between 500px and 1600px

    1rem=16px

    padding-top/padding-bottom:
        0.25rem (4px) at and below 31.25rem (500px) view width
        1rem (16px) at and above 75rem (1200px) view width
        scales with width between 500px and 1200px

    padding-left/padding-right:
        0.25rem (4px) at and below 31.25rem (500px) view width
        3rem (48px) at and above 75rem (1200px) view width
        scales with width between 500px and 1200px
*/
.l-main-panel {
    z-index: 1;
    position: relative;
    left: calc(50%);

    display: inline-block;
    transform: translate(calc(-50%), 0%);

    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0,.79,0,1);

    margin: 1rem 0 1rem 0;
    box-shadow: 5px 5px 15px rgba(0,0,0,0.5);
    border-top: 1px solid rgba(255, 255, 255, 0.5);
    border-left: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 1rem;
    box-sizing: border-box;
    width: calc(485px + 715 * ((100vw - 500px)/1100));
    padding-top: calc(0.25rem + 0.75 * ((100vw - 31.25rem)/43.75));
    padding-right: calc(0.25rem + 2.75 * ((100vw - 31.25rem)/43.75));
    padding-bottom: calc(0.25rem + 0.75 * ((100vw - 31.25rem)/43.75));
    padding-left: calc(0.25rem + 2.75 * ((100vw - 31.25rem)/43.75));

    background-color: rgba(223, 223, 223, 0.15);

    text-align: center;
    word-wrap: break-word;

    backdrop-filter: blur(2px);
}

@media (max-width: 500px) {
    .l-main-panel {
        width: 96vw;
        padding: 0.25rem;
    }
}

@media (min-width: 1200px) {
    .l-main-panel {
        padding: 1rem 3rem 1rem 3rem;
    }
}

@media (min-width: 1600px) {
    .l-main-panel {
        width: 1200px;
    }
}

/* Adds spacing for div and button children of main panel and rows */
.l-main-panel > div, .l-main-panel > button, .rows > div {
    margin-bottom: .666em;
}

/* Smaller spacing adustment to above rule */
.l-main-panel > .l-short-bottom {
    margin-bottom: 0.5em;
}

.l-main-panel::before {
    content: '';

    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;

    display: inline-block;
    
    border-radius: 1rem;
    width: 100%;
    height: 100%;
    
    background-image: linear-gradient(45deg, transparent 0%, rgba(255,255,255, .07) 66%, transparent 66%);
    
    pointer-events: none;
}

/*
    Centered flex row with scaling width
    Turns into stacked columns if under 288px breakpoint
    width:
        450px at 500px view width
        700px at and above 1600px view width
        scales with width up to 1600px
*/
.l-row {
    position: relative;
    left: 50%;
    justify-content: center;
    
    display: flex;
    transform: translate(-50%, 0%);

    width: calc(450px + 250 * ((100vw - 500px)/1100));
    max-width: 100%;
}

@media (max-width: 288px) {
    .l-row {
        align-items: end;
        flex-direction: column;
    }
}

@media (min-width: 1600px) {
    .l-row {
        width: 700px;
    }
}

/* Adds space to the top of the element */
.l-top-gap {
    margin-top: 1.34rem;
}

/* Makes div focus border match functional UI */
.border-match {
    border-radius: 0.35rem;
}

/*
    Button style for all buttons that are overlaid on top of a text input
    height:
        42.4px at and below 91px view width
        57px at and above 1600px view width
        scales with width between 91px and 1600px

    1rem=16px
    line-height:
        2.7rem (43.2px) at and below 5.6875rem (91px) view width
        3.5rem (56px) at and above 100rem (1600px) view width
        scales with width between 91px and 1600px
*/
.l-input-button {
    position: absolute;
    right: 0%;
    bottom: 0%;

    border-radius: 0.35rem;
    width: 1.5em;
    height: calc(42.4px + 14.6 * ((100vw - 91px)/(1509)));
    
    cursor: pointer;

    font-size: 1.5em;
    /*
        note on this line-height calculation;
            the 1.55 was experimentally determined, it should be 0.75

            im not sure why this works with -1.55 instead of -0.75 like it is supposed to be
            my guess is that since the font-size is 2em, during the division portion,
                the 2x modifier was removed from that expression, meaning we need to reintroduce it
                
                also it is possible that the initial value should be 1.775 instead, but it is close enough
    */
    line-height: calc(2.7rem + 0.8 * ((100vw - 5.6875rem)/(94.3125)));
    /**
        1em at largest sizes, then 1.75em at smallest size
        1.75 -.75
    line-height: calc(1.75em - 0.75 * ((100vw - 2.8475em)/(47.1525)));

    */
    font-weight: bold;
    text-align: center;
    vertical-align: middle;
    color: black;
}

@media (max-width: 91px) {
    .l-input-button {
        height: 42.4px;

        line-height: 2.7rem;
    }
}

@media (min-width: 1600px) {
    .l-input-button {
        height: 57px;

        line-height: 3.5rem;
    }
}

/* Removes the padding that adds space for a button
    padding-right, padding-left:
        2px at and below 91px view width
        12px at and above 1600px view width
        scales with width between 91px and 1600px
*/
.l-padding-no-button, input[type='text'].l-padding-no-button {
    padding-top: 12px;
    padding-right: calc(2px + 10 * ((100vw - 91px)/(1509)));
    padding-bottom: 12px;
    padding-left: calc(2px + 10 * ((100vw - 91px)/(1509)));
}

@media(max-width: 91px) {
    .l-padding-no-button, input[type='text'].l-padding-no-button {
        padding-right: 2px;
        padding-left: 2px;
    }
}

@media(min-width: 1600px) {
    .l-padding-no-button, input[type='text'].l-padding-no-button {
        padding-right: 12px;
        padding-left: 12px;
    }
}

/* Price inputs are smaller than regular text inputs */
.l-price-input {
    box-sizing: content-box !important;
    width: calc(3.5em + 2px) !important;
}

@media (max-width: 98px) {
    .l-price-input {
        box-sizing: border-box !important;
        width: 100% !important;
    }
}

/* Names and items white border*/
.l-name, .l-item {
    border-color: rgba(255,255,255,1);
    border-style: solid;
    border-width: 2px !important;
    color: var(--text-color-1-light);
}

/* Background color for names */
.l-name {
    /*background-color: rgba(0, 192, 0, 0.4);*/
    background-color: rgba(53, 181, 77, 1);
}

/* Background color for items */
.l-item {
    /*background-color: rgba(0, 96, 0, 0.4);*/
    background-color: rgba(45, 141, 76, 1);
}

/* Modal exit button */
.modal-exit {
    top: 0%;
    bottom: auto;
}

/*
    Adds an indent to the content inside this container
    At 288px width breakpoint loses indent to maximize space usage
*/
.l-attached-container {
    flex-wrap: wrap;
    justify-content: start;

    margin-bottom: 0;
    box-sizing: border-box;
    padding-left: 2em;
}

@media(max-width: 288px) {
    .l-attached-container {
        align-items: start;
        flex-direction: row;

        padding-left: 0;
    }
}

/*
    Only used for listing names mapped to an item inside
    an l-attached-container
*/
.l-attached-item {
    width: auto;
}

.l-attached-item {
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
}

@media(max-width: 288px) {
    .l-attached-item {
        margin-right: 0.25rem;
        margin-bottom: 0.25rem;
    }
}

/* Result panel styles */

/*          tax         tip         */
.l-result-input-row {
    flex-direction: row;
    justify-content: space-evenly;

    display: flex;
}

/*  tax
    tip*/
@media(max-width: 450px) {
    .l-result-input-row {
        flex-direction: column;
    }
}

/* Add some space on the bottom in case they are stacked */
.l-result-input-wrapper {
    margin-bottom: 0.25rem;
}

input[type='text'].l-result-input {
    width: 4.5rem;
}

/* Name                 $Amount.00 */
.l-result-row {
    justify-content: space-between;

    display: flex;

    padding-top: 2px !important;
    padding-bottom: 2px !important;
}





/* State Rules */

/* + button green color */
.add:hover, .add:focus {
    color: rgb(0, 200, 100);
}

/* X button red color */
.removeable:hover, .removeable:focus {
    color: red;
}

/* 9-16-2022: only used by item mapping modal */
.is-selected {
    border-color: #00FF00 !important;
    border-style: solid;
    border-width: 2px;
}





/* Modals */
/*
    Background darken and blur effect when modal is active
*/
/* backdrop-filter: blur only works with a background-color that has alpha channel*/
.overlay {
    content: '';

    position: fixed;
    z-index: 9;
    top: 0%;

    display: inline-block;

    width: 100%;
    height: 100%;

    background-color: rgba(0, 0, 0, 0.3);

    backdrop-filter: blur(2px);
}

/*
    Base modal class, used for both the confirm modal and item mapping
    modal
    1rem=16px
    margin-top:
        0rem at and below 43.75rem view width (700px)
        10rem at and above 75rem view width (1200px)
        scales with width between 700px and 1200px

    max-width:
        96vw below 500px view width
        485px at 500px view width
        1100px at and above 1600px view width
        scales with width between 500px and 1600px

    max-height:
        100vh under 700px view width
        43.75rem (700px) at 43.75rem view width (700px)
        65rem (1040px) at 75rem view width (1200px)
        100vh - 10rem (160px) above 1200px view width
        scales with width between 700px and 1200px
*/
.l-split-modal {
    position: fixed;
    z-index: 10;
    top: 0%;
    left: 50%;

    transform: translate(-50%, 0);
    
    overflow-y: auto;

    margin-top: calc(0rem + 10 * ((100vh - 43.75rem)/31.25));
    margin-right: 0;
    margin-bottom: 0;
    margin-left: 0;
    max-width: calc(485px + 615 * ((100vw - 500px)/1100));
    max-height: calc(43.75rem + 21.25 * ((100vh - 43.75rem)/31.25));
    
    border-color: rgb(0, 255, 166, 0.75);
    border-width: 2px;
    border-style: solid;
    
    backdrop-filter: blur(5px);
}

    .l-split-modal > h3 {
        color: black;
    }

@media (max-width: 500px) {
    .l-split-modal {
        max-width: 96vw;
    }
}

@media (min-width: 1600px) {
    .l-split-modal {
        max-width: 1100px;
    }
}

@media (max-height: 700px) {
    .l-split-modal {
        margin-top: 0;
        max-height: 100vh;
    }
}

@media (min-height: 1200px) {
    .l-split-modal {
        margin-top: 10rem;
        max-height: calc(100vh - 10rem);
    }
}

/*
    Only used by confirm modal
*/
.l-confirm-modal {
    top: 50%;

    transform: translate(-50%, -50%);

    margin-top: 0;
    max-height: 100vh;

    color: black;
}





/* Carousel styles */

/* Don't stretch screen if other panels don't fit */
/*
    The top and bottom padding are manually calibrated to account for the space left behind from making the header and footer both position: absolute.
    This was done to allow the blurred background panels to be viewable when taller than the active panel, but comes at the cost of decoupling the header and footer
    from the rest of the page layout.

    padding-top:
        206.2px at and over 1600px view width
        63.433 at 91px view width
        scales with width between 91px and 1600px, scales below 91px

    padding-bottom:
        63px at and over 1600px view width
        51px at 289px view width
        72px at 288px view width
        86px at 91 px view width
        scales with width between 289px and 1600px
        scales with width up to 288px and below 91px
*/
.carousel-wrapper {
    overflow-x: hidden;
    overflow-y: clip;

    width: 100%;
    padding-top: calc(63.4333px + 142.7667 * ((100vw - 91px)/1509));
    padding-bottom: calc(51px + 12 * ((100vw - 289px)/1311));
}

@media(max-width: 288px) {
    .carousel-wrapper {
        padding-bottom: calc(86px - 14 * ((100vw - 91px)/197));
    }
}

@media(min-width: 1600px) {
    .carousel-wrapper {
        padding-top: 206.2px;
        padding-bottom: 63px;
    }
}

/* Render all panels, centered and offset */
.carousel {
    position: relative;
    left: 50%;
    align-items: center;

    display: inline-flex;
    transform: translate(-50%, 0);
    perspective: 500px;
    transform-style: preserve-3d;
}

/*
    Variable CSS properties to be configured by JS for carousel
    --offset:       0.33, 0.66, 1, -0.33, -0.66, -1
    --abs-offset:   0.33, 0.66, 1
    --direction:    1, -1
    --x-scale
    --x-offset

    Present when a panel is not the active panel
*/
#collect-names, #item-mapping, #results, #collect-items {
    position: absolute;
    z-index: 0;

    transform:
        translateX(calc(var(--x-offset) * -1rem))
        rotateY(calc(var(--offset) * 50deg))
        scaleY(calc(1 + var(--abs-offset) * -0.4))
        translateZ(calc(var(--abs-offset) * -30rem))
        translateX(calc(var(--direction) * -5rem))
        scaleX(calc(1 - var(--x-scale)));

    filter: blur(calc(var(--abs-offset) * 1.5rem));
    pointer-events: none;
}




/* Remove when building, otherwise iframe won't work properly */
iframe {
    pointer-events: none;
}
